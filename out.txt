STACK_BASE	EQU	0x1000
HEAP_BASE	EQU	0x10000
	MOV	SP,	#STACK_BASE
	MOV	R12,	#HEAP_BASE
	MOV	R6,	#STACK_BASE
	LDR	r7, =10
	STR	r7, [SP]
	ADD	SP, SP, #4

	STR	r12, [SP]
	ADD	SP,SP, #4
	LDR	r8, =97	
	STR	r8,[r12]
	ADD	r12, r12, #-4
	LDR	r8, =98
	STR	r8,[r12]
	ADD	r12, r12, #-4
	LDR	r8, =99
	STR	r8,[r12]
	ADD	r12, r12, #-4
	LDR	r8, =999
	STR	r8,[r12]
	ADD	r12, r12, #-4
	LDR	r7, =12
	STR	r7, [SP]
	ADD	SP, SP, #4
	LDR	r7, =40
	STR	r7, [SP]
	ADD	SP, SP, #4
	ADD	SP,	SP,	#12
	LDR	R2,[R6, #12]
	MOV	R1,	R2
	STR R1, [R12, #0]
	MOV	R2, #10
	STR R2, [R12, #4]
	LDR R1, [R12, #0]
	ADD	R2,	R1,	R2
	SUB SP, SP, #12
	STR	r2, [SP]
	ADD	SP, SP, #4
	B	let_0

let_0
	MOV	R2, #1
	STR	R2 , [SP]
	MOV	R9, SP
	ADD	SP, SP, #4
for_0
	LDR	R2, [R9]
	CMP	R2, #10
	BEQ	endfor_0
;Contenu de la boucle for_0
	ADD	SP,	SP,	#12
	LDR	R2,[R6, #0]
	MOV	R1,	R2
	STR R1, [R12, #0]
	ADD	SP,	SP,	#12
	LDR	R2,[R6, #0]
	MOV	R1,	R2
	STR R1, [R12, #0]
	MOV	R2, #1
	STR R2, [R12, #4]
	LDR R1, [R12, #0]
	ADD	R2,	R1,	R2
	SUB SP, SP, #12
	STR R2, [R12, #4]
	LDR R1, [R12, #0]
	CMP	R2,	R1
	MOVNE	R2,	#0
	MOVEQ	R2,	#1
	SUB SP, SP, #12
;fin contenu boucle for
	LDR	R2, [R9]
	ADD	R2, R2, #1
	STR	R2, [R9]
	B	for_0
endfor_0
	SUB	SP, SP, #4


;DECLARATIONS DE FONCTIONS

END